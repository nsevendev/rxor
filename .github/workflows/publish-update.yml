name: Publish to npm

on:
  push:
    branches:
      - main
      - release-*
  pull_request:
    types:
      - closed

permissions:
  contents: write

jobs:
  publish:
    if: github.event.pull_request.merged == true && (github.event.pull_request.base.ref == 'main' || github.event.pull_request.base.ref == 're7') || github.event_name == 'push'
    name: Publish to npm
    runs-on: ubuntu-latest

    steps:
      # checked code source
      - name: Checkout code
        uses: actions/checkout@v3

      # Config Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '22.13.0'
          cache: 'npm'

      # Install dependancies
      - name: Install dependencies
        run: npm install

      # Build project
      - name: Build project
        run: npm run prepare

      # checked if we on branch "main" or "re7
      - name: Check branch
        id: branch-check
        run: |
          echo "BRANCH=\"${{ github.ref_name }}\"" >> $GITHUB_ENV
          if [ "${{ env.BRANCH }}" = "main" ]; then
            echo "On a main branch"
            echo "NPM_TAG=latest" >> $GITHUB_ENV
            echo "ON_MAIN=true" >> $GITHUB_ENV
          elif [[ "${{ env.BRANCH }}" == release-* ]]; then
            echo "On a release branch"
            echo "NPM_TAG=\"${{ env.BRANCH }}\"" >> $GITHUB_ENV
            echo "ON_MAIN=false" >> $GITHUB_ENV
          else
            echo "Skipping: unsupported branch."
            exit 0
          fi
            echo "BRANCH in env: ${{ env.BRANCH }}"
            echo "NPM_TAG in env: ${{ env.NPM_TAG }}"
            echo "ON_MAIN in env: ${{ env.ON_MAIN }}"

      # Identifier type of bump
      - name: Determine bump type
        id: determine-bump
        run: |
          BUMP_TYPE=$(echo "${{ github.event.head_commit.message }}" | grep -oE '\[bump:(patch|minor|major)\]' | sed 's/\[bump://;s/\]//')
          if [[ "$BUMP_TYPE" =~ ^(patch|minor|major)$ ]]; then
            echo "Valid bump type found:" $BUMP_TYPE
          else
            echo "No valid bump type found in commit message. Defaulting to 'patch'."
            BUMP_TYPE="patch"
          fi
          echo "BUMP_TYPE=$BUMP_TYPE" >> $GITHUB_ENV
          echo "BUMP_TYPE in env: ${{ env.BUMP_TYPE }}"

      # Incremente version
      - name: Bump version
        run: |
          echo "Using bump type: ${{ env.BUMP_TYPE }}"
          npm version ${{ env.BUMP_TYPE }} --no-git-tag-version
          VERSION=$(node -p "require('./package.json').version")
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "New version: $VERSION"
          echo "VERSION in env : ${{ env.VERSION }}"

      # Commit new version
      - name: Commit new version
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add package.json package-lock.json
          git commit -m "chore(release): bump version to ${{ env.VERSION }}"
          echo "Committing new version: ${{ env.VERSION }}"

      # Commit dist in branch
      - name: Commit new dist
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add dist/
          git commit --allow-empty -m "chore(release): build dist ${{ env.VERSION }}"
          echo "Committing new dist with version: ${{ env.VERSION }}"

      # Ajout d’un tag Git basé sur la version
      - name: Tag version
        run: |
          git tag ${{ env.VERSION }}
          echo "Tagging version: ${{ env.VERSION }}"

      # Push commit in branch
      - name: Push changes
        run: |
          echo "Pushing changes and tag: ${{ env.VERSION }}"
          git push https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }} HEAD:${{ github.ref_name }}
          git push https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }} ${{ env.version }} 

      # Config auth npm in .npmrc
      - name: Configure npm authentication
        run: echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" > ~/.npmrc

      # Publish npm
      - name: Publish to npm
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: npm publish --access public --loglevel verbose
